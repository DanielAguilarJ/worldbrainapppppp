#!/bin/bash

echo "üîç VERIFICACI√ìN DE ELIMINACI√ìN DE FIREBASE"
echo "=========================================="

# Verificar archivos Swift
echo "üìÅ Buscando referencias a Firebase en archivos Swift..."
FIREBASE_REFS=$(grep -r "Firebase" /workspaces/worldbrainapppppp/worldbrainapp/worldbrain --include="*.swift" 2>/dev/null | wc -l)

if [ $FIREBASE_REFS -eq 0 ]; then
    echo "‚úÖ No se encontraron referencias a Firebase en archivos Swift"
else
    echo "‚ùå Se encontraron $FIREBASE_REFS referencias a Firebase:"
    grep -r "Firebase" /workspaces/worldbrainapppppp/worldbrainapp/worldbrain --include="*.swift" 2>/dev/null
fi

echo ""

# Verificar archivos de configuraci√≥n
echo "üìÅ Buscando archivos de configuraci√≥n de Firebase..."
GOOGLE_SERVICE_FILES=$(find /workspaces/worldbrainapppppp -name "GoogleService-Info.plist" 2>/dev/null | wc -l)

if [ $GOOGLE_SERVICE_FILES -eq 0 ]; then
    echo "‚úÖ No se encontraron archivos GoogleService-Info.plist"
else
    echo "‚ùå Se encontraron archivos GoogleService-Info.plist:"
    find /workspaces/worldbrainapppppp -name "GoogleService-Info.plist" 2>/dev/null
fi

echo ""

# Verificar proyecto Xcode
echo "üìÅ Verificando proyecto Xcode..."
XCODE_FIREBASE_REFS=$(grep -c "Firebase" /workspaces/worldbrainapppppp/worldbrainapp.xcodeproj/project.pbxproj 2>/dev/null || echo "0")

if [ $XCODE_FIREBASE_REFS -eq 0 ]; then
    echo "‚úÖ No se encontraron referencias a Firebase en project.pbxproj"
else
    echo "‚ùå Se encontraron $XCODE_FIREBASE_REFS referencias a Firebase en project.pbxproj"
fi

echo ""

# Verificar archivos de backend
echo "üìÅ Verificando archivos de backend..."
if [ -f "/workspaces/worldbrainapppppp/worldbrainapp/worldbrain/Components/AppwriteBackend.swift" ]; then
    echo "‚úÖ AppwriteBackend.swift existe"
else
    echo "‚ùå AppwriteBackend.swift no encontrado"
fi

if [ -f "/workspaces/worldbrainapppppp/worldbrainapp/worldbrain/Components/FirebaseBackend.swift" ]; then
    echo "‚ùå FirebaseBackend.swift a√∫n existe"
else
    echo "‚úÖ FirebaseBackend.swift eliminado correctamente"
fi

echo ""

# Resumen final
echo "üìä RESUMEN DE VERIFICACI√ìN"
echo "========================"

TOTAL_ISSUES=0

if [ $FIREBASE_REFS -gt 0 ]; then
    echo "‚ùå Referencias a Firebase en c√≥digo: $FIREBASE_REFS"
    TOTAL_ISSUES=$((TOTAL_ISSUES + 1))
fi

if [ $GOOGLE_SERVICE_FILES -gt 0 ]; then
    echo "‚ùå Archivos de configuraci√≥n de Firebase: $GOOGLE_SERVICE_FILES"
    TOTAL_ISSUES=$((TOTAL_ISSUES + 1))
fi

if [ $XCODE_FIREBASE_REFS -gt 0 ]; then
    echo "‚ùå Referencias en proyecto Xcode: $XCODE_FIREBASE_REFS"
    TOTAL_ISSUES=$((TOTAL_ISSUES + 1))
fi

if [ $TOTAL_ISSUES -eq 0 ]; then
    echo ""
    echo "üéâ VERIFICACI√ìN EXITOSA"
    echo "‚úÖ Firebase ha sido eliminado completamente"
    echo "‚úÖ Solo Appwrite permanece como backend"
    echo "‚úÖ Proyecto listo para usar exclusivamente Appwrite"
else
    echo ""
    echo "‚ö†Ô∏è  VERIFICACI√ìN CON PROBLEMAS"
    echo "‚ùå Se encontraron $TOTAL_ISSUES problemas que necesitan atenci√≥n"
fi

echo ""
echo "üîó Archivos principales de Appwrite:"
echo "   - AppwriteBackend.swift"
echo "   - AppwriteConfig.plist"
echo "   - UnifiedAuthManager.swift (simplificado)"
